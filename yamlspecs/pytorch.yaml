!include pymodule.yaml
---
- package: pytorch 
  basename: pytorch
  name: pytorch
  release: "{{versions.pytorch_release}}"
  forcecuda: "0"
  version: "{{versions.pytorch}}"
  version_str: "{{versions.pytorch_str}}"
  baserpm: "{{basefamily}}{{cudasuffix}}"
  src_tarball: "{{basename}}-{{version}}.{{extension}}"
  src_dir: "{{basename}}-{{version_str}}{{version}}"
  vendor_source: https://github.com/pytorch/pytorch/releases/download/v{{version}}/pytorch-v{{version}}.{{extension}}
  root: "{{pkg_defaults.app_path}}/{{name}}/{{version}}"
  description: |
    PyTorch is a Python package that provides two high-level features
    (1) Tensor computation (like NumPy) with strong GPU acceleration
    (2) Deep neural networks built on a tape-based autograd system
  build:
    modules: 
      - "{{build.base_modules}}"
      - foundation/{{versions.foundation}}
    base_modules: 
      - "{{compiler}}/{{compiler_version}}"
      - python/{{python_version}}
      - mkl/{{versions.mkl}}
      - ffmpeg/{{versions.ffmpeg}}
      - fftw/{{versions.fftw}}/{{compiler}}.{{compiler_version}}
    pkgmake: >
      export USE_CUDA={{forcecuda}} USE_CUDNN={{forcecuda}};
      export USE_MKLDNN=0 USE_MKLDNN_CBLAS=1 DNNL_CPU_RUNTIME=OMP;
      export USE_FFMPEG=1;
      export LIBRARY_PATH=$$LD_LIBRARY_PATH;
      export CMAKE_INCLUDE_PATH=$$FFMPEG_INC:$$MKL_INCLUDE_DIR:$$CMAKE_INCLUDE_PATH;
      export CMAKE_LIBRARY_PATH=$$LD_LIBRARY_PATH:$$CMAKE_LIBRARY_PATH;
      python{{python_major}} ./setup.py build
  install:
    makeinstall: python{{python_major}} setup.py install --root $(ROOT) --prefix={{root}}
  requires:
    - "{{base_requires}}"
  base_requires:
    - "{{compiler}}_{{compiler_version}}"
    - python_{{python_version}}
    - python_{{python_version}}-numpy
    - python_{{python_version}}-six
    - python_{{python_version}}-cffi
    - python_{{python_version}}-pyyaml
    - mkl_{{versions.mkl}}
    - ffmpeg_{{versions.ffmpeg}}
    - fftw_{{versions.fftw}}_{{compiler}}_{{compiler_version}}
  conflicts: "{{basefamily}}{{withcuda}}"
